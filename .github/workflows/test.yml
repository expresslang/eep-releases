name: test

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - '.github/workflows/test.yml'
      - 'linux/eep-**'
      - 'macos/eep-**'
      - 'windows/eep-**'
  pull_request:
    paths:
      - '.github/workflows/test.yml'
      - 'linux/eep-**'
      - 'macos/eep-**'
      - 'windows/eep-**'

permissions:
  contents: read

jobs:
  test-linux-x64:
    name: Test Linux x86-64
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test eep binary
        run: |
          chmod +x linux/eep-linux-x64
          ./linux/eep-linux-x64 -h || true
          echo "✅ Linux x86-64 binary executed successfully"

  test-linux-arm64:
    name: Test Linux ARM64
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install x86-64 emulation (binary is x86-64)
        run: |
          # Install QEMU user-mode emulation first
          sudo apt-get update
          sudo apt-get install -y qemu-user-static binfmt-support

          # Backup and disable ALL existing source configurations
          sudo mv /etc/apt/sources.list /etc/apt/sources.list.bak
          # Ubuntu 24.04 uses DEB822 format sources that conflict with our arch-specific setup
          if [ -f /etc/apt/sources.list.d/ubuntu.sources ]; then
            sudo mv /etc/apt/sources.list.d/ubuntu.sources /etc/apt/sources.list.d/ubuntu.sources.bak
          fi

          # Create new sources.list with ARM64 packages only
          sudo tee /etc/apt/sources.list > /dev/null << 'EOF'
          # ARM64 packages from ports.ubuntu.com
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-updates main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-backports main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-security main restricted universe multiverse
          EOF

          # Add amd64 architecture
          sudo dpkg --add-architecture amd64

          # Configure amd64 sources (amd64 packages are on archive.ubuntu.com)
          sudo tee /etc/apt/sources.list.d/amd64.list > /dev/null << 'EOF'
          # AMD64 packages from archive.ubuntu.com
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu noble main restricted universe multiverse
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu noble-updates main restricted universe multiverse
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu noble-backports main restricted universe multiverse
          deb [arch=amd64] http://security.ubuntu.com/ubuntu noble-security main restricted universe multiverse
          EOF

          # Update package lists and install amd64 libraries
          sudo apt-get update
          sudo apt-get install -y libc6:amd64

      - name: Test eep binary with x86-64 emulation
        run: |
          chmod +x linux/eep-linux-x64
          # This may fail due to architecture mismatch, but we test the setup
          ./linux/eep-linux-x64 -h || echo "⚠️  x86-64 binary requires emulation on ARM64"
          echo "✅ Linux ARM64 compatibility check completed"

  test-macos-13-intel:
    name: Test macOS 13 (Intel)
    runs-on: macos-13

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test eep-macos-10.11-x64 binary
        run: |
          chmod +x macos/eep-macos-10.11-x64
          ./macos/eep-macos-10.11-x64 -h || true
          echo "✅ macOS 10.11-x64 binary executed on macos-13"

      - name: Test eep-macos-12-x64 binary
        run: |
          chmod +x macos/eep-macos-12-x64
          ./macos/eep-macos-12-x64 -h || true
          echo "✅ macOS 12-x64 binary executed on macos-13"

  test-macos-15-intel:
    name: Test macOS 15 (Intel)
    runs-on: macos-15-intel

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test eep-macos-10.11-x64 binary
        run: |
          chmod +x macos/eep-macos-10.11-x64
          ./macos/eep-macos-10.11-x64 -h || true
          echo "✅ macOS 10.11-x64 binary executed on macos-15-intel"

      - name: Test eep-macos-12-x64 binary
        run: |
          chmod +x macos/eep-macos-12-x64
          ./macos/eep-macos-12-x64 -h || true
          echo "✅ macOS 12-x64 binary executed on macos-15-intel"

  test-macos-14-arm:
    name: Test macOS 14 (Apple Silicon)
    runs-on: macos-14

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test eep-macos-10.11-x64 binary (Rosetta 2)
        run: |
          chmod +x macos/eep-macos-10.11-x64
          arch -x86_64 ./macos/eep-macos-10.11-x64 -h || true
          echo "✅ macOS 10.11-x64 binary executed via Rosetta 2 on macos-14"

      - name: Test eep-macos-12-x64 binary (Rosetta 2)
        run: |
          chmod +x macos/eep-macos-12-x64
          arch -x86_64 ./macos/eep-macos-12-x64 -h || true
          echo "✅ macOS 12-x64 binary executed via Rosetta 2 on macos-14"

  test-macos-15-arm:
    name: Test macOS 15 (Apple Silicon)
    runs-on: macos-15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test eep-macos-10.11-x64 binary (Rosetta 2)
        run: |
          chmod +x macos/eep-macos-10.11-x64
          arch -x86_64 ./macos/eep-macos-10.11-x64 -h || true
          echo "✅ macOS 10.11-x64 binary executed via Rosetta 2 on macos-15"

      - name: Test eep-macos-12-x64 binary (Rosetta 2)
        run: |
          chmod +x macos/eep-macos-12-x64
          arch -x86_64 ./macos/eep-macos-12-x64 -h || true
          echo "✅ macOS 12-x64 binary executed via Rosetta 2 on macos-15"

  test-macos-latest-arm:
    name: Test macOS 26 (Apple Silicon)
    runs-on: macos-26

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test eep-macos-10.11-x64 binary (Rosetta 2)
        run: |
          chmod +x macos/eep-macos-10.11-x64
          arch -x86_64 ./macos/eep-macos-10.11-x64 -h || true
          echo "✅ macOS 10.11-x64 binary executed via Rosetta 2 on macos-latest"

      - name: Test eep-macos-12-x64 binary (Rosetta 2)
        run: |
          chmod +x macos/eep-macos-12-x64
          arch -x86_64 ./macos/eep-macos-12-x64 -h || true
          echo "✅ macOS 12-x64 binary executed via Rosetta 2 on macos-latest"

  test-windows-x64:
    name: Test Windows x86-64
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test eep binary
        shell: cmd
        run: |
          windows\eep-windows-x86.exe -h || exit 0
          echo ✅ Windows x86 binary executed successfully on windows-latest

  test-windows-arm64:
    name: Test Windows ARM64
    runs-on: windows-11-arm

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test eep binary (x86 emulation)
        shell: cmd
        run: |
          windows\eep-windows-x86.exe -h || exit 0
          echo ✅ Windows x86 binary executed via emulation on windows-11-arm

  test-summary:
    name: Test Summary
    needs:
      - test-linux-x64
      - test-linux-arm64
      - test-macos-13-intel
      - test-macos-15-intel
      - test-macos-14-arm
      - test-macos-15-arm
      - test-macos-latest-arm
      - test-windows-x64
      - test-windows-arm64
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Check test results
        run: |
          echo "### Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Platform | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Linux x86-64 | ${{ needs.test-linux-x64.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Linux ARM64 | ${{ needs.test-linux-arm64.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| macOS 13 Intel | ${{ needs.test-macos-13-intel.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| macOS 15 Intel | ${{ needs.test-macos-15-intel.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| macOS 14 ARM | ${{ needs.test-macos-14-arm.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| macOS 15 ARM | ${{ needs.test-macos-15-arm.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| macOS Latest ARM | ${{ needs.test-macos-latest-arm.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Windows x86-64 | ${{ needs.test-windows-x64.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Windows ARM64 | ${{ needs.test-windows-arm64.result }} |" >> $GITHUB_STEP_SUMMARY
